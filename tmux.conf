# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# quit \
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client

# split -v |
unbind |
bind | split-window -h -c "#{pane_current_path}"
unbind S
bind S split-window -c "#{pane_current_path}"

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window

# screen copy-mode
unbind [
bind Escape copy-mode
setw -g mode-keys vi
bind -T copy-mode-vi C-j send-keys -X scroll-down
bind -T copy-mode-vi C-k send-keys -X scroll-up

# Start counting from 1
set-option -g base-index 1

# Renumber when a window is removed
set-option -g renumber-windows on

# dont wait for the esc key
set -s escape-time 0

# override xterm colours
set -g terminal-overrides 'tmux*:colors=256:RGB'
set -g default-terminal tmux-256color
set-option -sa terminal-overrides ",tmux*:Tc"

# enable mouse support
set -g mouse on
setw -g alternate-screen on

# Scroll History
set -g history-limit 30000

# vim focus events
set-option -g focus-events on

# powerline
set-option -g status on
set-option -g status-interval 2
#set-option -g status-utf8 on
set-option -g status-style "bg=colour235"
set-option -ag status-style "fg=colour255"
#set-option -g status-style "bg=colour255"
#set-option -ag status-style "fg=colour235"
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/tmux/status_left.sh)"
set-option -g status-right "#(~/tmux/status_right.sh)"

set-option -g window-status-separator ""
set-option -g window-status-format "#[fg=colour102 bg=default]#I#{?pane_synchronized,:⛓,:}#W#[fg=colour235 bg=colour235]"
set-option -g window-status-current-format "#[fg=colour235 bg=colour0]#[fg=default bg=colour0]#I:#W#[fg=colour0 bg=colour235]"
set-option -g window-status-current-style "fg=colour255"
set-option -ag window-status-current-style "bg=colour0"
#set-option -g window-status-style "bg=colour0"


# Plugins
# Plugins Manager
set -g @plugin 'tmux-plugins/tpm'

# TMUX Resurect and continuum
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'

# Resurect vim config
set -g @resurrect-strategy-nvim 'session'

set -g @continuum-restore 'on'

# TMUX Yank
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @yank_selection 'clipboard'
set -g @yank_selection_mouse 'clipboard'

#sep 
if "test ! -d ~/tmux/plugins/tpm" \
	"run 'git clone https://github.com/tmux-plugins/tpm ~/tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
run '~/tmux/plugins/tpm/tpm'
